#!/usr/bin/env python3

import sys
import time
import os

DEBUG=os.getenv("DEBUG") == "1"

DECAY = 0.9
target = None

if len(sys.argv) == 2:
    target = int(sys.argv[1])

def update_rate(old_rate, new_rate):
    if old_rate is None:
        return new_rate
    else:
        return DECAY * old_rate + (1 - DECAY) * new_rate

def duration_s(secs):
    if secs < 60:
        return f"{secs} seconds"
    elif secs < 3600:
        return f"{secs // 60} minutes, {duration_s(secs % 60)}"
    else:
        return f"{secs // 3600} hours, {duration_s(secs % 3600)}"

def read_num():
    x = int(input())
    if target is not None:
        x = target - x
    return x

last_num = read_num()
last_t = int(time.time())
rate = None

while last_num > 0:
    next_num = read_num()
    next_t = int(time.time())
    delta = next_num - last_num
    delta_t = last_t - next_t
    per_sec = delta / delta_t
    old_rate = rate
    rate = update_rate(rate, per_sec)
    if rate == 0:
        remaining, eta = "an eternity", "heat death"
    else:
        est_secs_left = int(next_num / rate)
        eta = time.ctime(time.time() + est_secs_left)
        remaining = duration_s(est_secs_left)
    if DEBUG:
        print(f"old_rate={old_rate}, recent_rate={per_sec}, new_rate={rate}")
    print(f"{next_num:10d} | {remaining:40} | {eta}")
    last_num = next_num
    last_t = next_t

print("DONE!")
