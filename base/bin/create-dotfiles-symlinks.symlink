#!/usr/bin/env bash

set -e

EXIT_CODE=0

while IFS= read -r profile; do
  cd $profile

  find . -name '*.symlink' -print0 | while read -d $'\0' dotslashfile
  do
    file="$(echo "${dotslashfile:2}")"
    file_no_symlink="$(echo "${file::-8}")"
    linkfile=$HOME/$file_no_symlink
    linkto=$profile/$file
    if [ -d $linkfile ] || [ -L $linkfile ]; then
      existing="$(readlink $linkfile)"
      if [ "$linkto" != "$existing" ]
      then
        echo "Warning! Existing dotfile is not the correct symlink: $linkfile"
        echo "(Due to $linkto != $existing)"
        EXIT_CODE=1
      fi
    elif [ -f $linkfile ] ; then
      echo >&2 "Warning! $linkfile is supposed to be a symlink but is a regular file"\!
      EXIT_CODE=1
    else
      echo "Linking $linkfile to $linkto"
      parent="$(dirname $linkfile)"
      if [[ -z "${DRYRUN:-}" ]]; then
          mkdir -p $parent &>/dev/null
          ln -s $linkto $linkfile
      fi
    fi
  done
done < <(cat ~/.dotfiles-profiles)

DEAD_LINK_COUNT=0
for FILE in `find ~/bin -maxdepth 1 -type l`; do
    if [[ -d "$FILE" ]]; then
        for EX in $(find "$FILE"/ -maxdepth 1 -type f -executable) \
                  $(find "$FILE"/ -maxdepth 1 -type l -executable); do
            NAME="$(basename "$EX")"
            EXPECTED="$(realpath "$EX")"
            LINKLOC="$HOME/bin/$NAME"
            if [[ -L "$LINKLOC" ]]; then
                if ! [[ -e "$LINKLOC" ]]; then
                    echo "Correcting dead link"
                    echo rm "$LINKLOC"
                    echo ln -s "$EXPECTED" "$LINKLOC"
                    if [[ -z "${DRYRUN:-}" ]]; then
                        rm "$LINKLOC"
                        ln -s "$EXPECTED" "$LINKLOC"
                    fi
                else
                    ACTUAL="$(realpath "$LINKLOC")"
                    if [[ "$ACTUAL" != "$EXPECTED" ]]; then
                        echo >&2 "Bad bin symlink at: $LINKLOC -- actual[$ACTUAL] expected[$EXPECTED]"
                    fi
                fi
            else
                echo ln -s "$EXPECTED" "$LINKLOC"
                if [[ -z "${DRYRUN:-}" ]]; then
                    ln -s "$EXPECTED" "$LINKLOC"
                fi
            fi
        done
    elif ! [[ -e "$FILE" ]]; then
        DEAD_LINK_COUNT=$((DEAD_LINK_COUNT+1))
        EXIT_CODE=1
    fi
done

if [[ "$DEAD_LINK_COUNT" -gt 0 ]]; then
    echo >&2 "Found $DEAD_LINK_COUNT dead links"
fi

exit $EXIT_CODE
